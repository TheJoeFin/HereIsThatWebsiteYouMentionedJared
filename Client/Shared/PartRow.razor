@using BlazorApp.Client
@page "/partrow"
<tr>
    <td>
        <input class="form-control" type="text" @bind="ThisIngredient.Name" />
    </td>
    <td>
        <table>
            <tbody>
                <tr>
                    <th>
                        <p class="text-center">@ThisIngredient.Parts</p>
                    </th>
                    <th>
                        <div>
                            <button class="btn btn-xs btn-primary" @onclick="moreParts" type="button">+</button>
                            <button class="btn btn-xs btn-primary" @onclick="fewerParts" type="button">-</button>
                        </div>
                    </th>
                </tr>
            </tbody>
        </table>
    </td>
    <td>
        @OuncesOfIngredient
    </td>
    <td>
        <button class="btn btn-danger btn-xs" @onclick="deleteRow">X</button>
    </td>
</tr>


@code{
    [Parameter]
    public Ingredient ThisIngredient { get; set; }

    public double percentageOfWhole
    {
        get
        {
            return (double)ThisIngredient.Parts / (double)ThisIngredient.TotalParts;
        }
    }

    public double OuncesOfIngredient
    {
        get
        {
            return Math.Round((float)ThisIngredient.FinalOunces * percentageOfWhole, 3);
        }
    }

    [Parameter]
    public EventCallback<MouseEventArgs> PartsChanged { get; set; }

    [Parameter]
    public EventCallback<string> RowDeleted { get; set; }

    private void deleteRow(MouseEventArgs e)
    {

        RowDeleted.InvokeAsync(ThisIngredient.ID.ToString());
    }

    private async Task fewerParts(MouseEventArgs e)
    {
        if (ThisIngredient.Parts > 0)
        {
            ThisIngredient.Parts--;
            await PartsChanged.InvokeAsync(e);
        }
    }

    private async Task moreParts(MouseEventArgs e)
    {
        ThisIngredient.Parts++;
        await PartsChanged.InvokeAsync(e);
    }
}